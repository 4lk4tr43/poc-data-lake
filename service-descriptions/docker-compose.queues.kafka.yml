services:
  kafka-zookeeper:
    image: bitnami/zookeeper
    healthcheck:
      test: [ "CMD", "/healthcheck/zookeeper.sh", "kafka" ]
      interval: 30s
      timeout: 5s
      retries: 3
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - KAFKA_OPTS=-Dzookeeper.4lw.commands.whitelist=*
    volumes:
      - ./queues/kafka/mnt/healthcheck:/healthcheck

  kafka:
    image: bitnami/kafka
    depends_on:
      kafka-zookeeper:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "/healthcheck/kafka.sh", "kafka" ]
      interval: 30s
      timeout: 5s
      retries: 3
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=kafka-zookeeper:2181
    volumes:
      - ./queues/kafka/mnt/healthcheck:/healthcheck

  kafka-ui:
    depends_on:
      kafka:
        condition: service_healthy
    image: provectuslabs/kafka-ui
    ports:
      - 26002:8080
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=kafka-zookeeper:2181

  kafka-queue_receiver:
    depends_on:
      kafka:
        condition: service_healthy
    image: poc-data-lake/queues/kafka/queue-receiver
    ports:
      - 26030:80
    environment:
      - KAFKA_HOSTS=kafka
      - TOPIC=poc-data-lake

  kafka-dispatcher:
    depends_on:
      kafka:
        condition: service_healthy
    image: poc-data-lake/queues/kafka/dispatcher
    environment:
      KAFKA_HOSTS: kafka
      TOPIC: poc-data-lake
      GROUP: poc-data-lake-dispatchers
